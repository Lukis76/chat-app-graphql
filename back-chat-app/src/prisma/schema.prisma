// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin"]
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://lucas:mano76@clusterone.3t6fj.mongodb.net/chat-app-graphql?retryWrites=true&w=majority" //env("DATABASE_URL") 
}

model User {
  id            String                    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String                    @unique
  passwordHash  String?                    @unique
  emailVerified Boolean?
  image         String?
  username      String                    @unique
  token         String?                   @unique
  conversations ConversationParticipant[]
  msgs          Msg[]
  createdAt     DateTime?                  @default(now())
  updatedAt     DateTime?                  @updatedAt
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Conversation {
  id           String                    @id @default(auto()) @map("_id") @db.ObjectId
  participants ConversationParticipant[]
  msg          Msg[]                     @relation("conversationMsgs")
  latestMsg    Msg?                      @relation(name: "latestConversationMsg", fields: [latestMsgId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  latestMsgId  String?                   @unique @db.ObjectId
  createdAt    DateTime                  @default(now())
  updatedAt    DateTime                  @updatedAt
}

model ConversationParticipant {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  user             User         @relation(fields: [userId], references: [id])
  userId           String       @db.ObjectId
  conversation     Conversation @relation(fields: [conversationId], references: [id])
  conversationId   String       @db.ObjectId
  hasSeenLatestMsg Boolean
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
}

model Msg {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  conversation   Conversation  @relation(name: "conversationMsgs", fields: [conversationId], references: [id])
  conversationId String        @db.ObjectId
  isLatestIn     Conversation? @relation("latestConversationMsg")
  senderId       String        @db.ObjectId
  sender         User          @relation(fields: [senderId], references: [id])
  body           String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}
